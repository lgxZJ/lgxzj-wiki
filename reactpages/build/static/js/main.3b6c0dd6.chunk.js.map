{"version":3,"sources":["LineChart.js","BulletChart.js","IFrameChild.js","LiquidChart.js","StatisticChart.js","PieChart.js","ColumnChart.js","MonitorPanel.js","MachinePage.js","MysqlPanel.js","NginxPanel.js","PhpFpmPanel.js","PrometheusPanel.js","BackupsPanel.js","ServicePage.js","WordpressPanel.js","App.js","serviceWorker.js","index.js"],"names":["LineChart","xFieldName","this","props","yFieldName","pointsData","config","title","visible","text","description","desc","xField","yField","seriesField","data","padding","forceFit","label","type","point","size","shape","style","fill","stroke","lineWidth","legend","position","yAxis","React","Component","BulletChart","ranges","configData","forEach","element","push","bulletTitle","measures","bulletMeasure","targets","chartTitle","chartDesc","rangeMax","rangeColors","inIFrame","window","location","parent","document","domain","iframeChangedHandler","ele","height","getElementById","Math","max","scrollHeight","parentIFrameNode","console","log","LiquidChart","state","curValue","maxValue","min","value","StatisticChart","PieChart","radius","angleField","colorField","ColumnChart","meta","name","alias","Panel","Collapse","axios","require","default","MonitorPanel","fetchData","bind","fetchCpuData","genQueryTimeRange","panelChanged","setTimeout","IFrameChangeHandler","timestampEnd","floor","Date","now","start","end","step","idx","toString","timestamp","Format","strValue","parseInt","res","result","row","rowIdx","col","colIdx","setState","preState","newState","JSON","parse","stringify","chartDataArray","chartConfigs","loading","timeRange","url","queryUrl","updateChartLoading2State","get","params","query","then","machineResult","getResultFromResponse","machineDataChart","cpuData","cpuIdx","cpuDataValues","values","cpuName","metric","cpu","pointDate","unixTimestamp2DateFormat","cpuUsage","stringValue2Int","updateChartData2State","catch","err","inputs","unitTranslator","labelAppender","valueParser","item","totalPromise","input","eleProcessor","dataEle","resIdx","proc","appendLabelPart","length","chartType","Promise","all","resArray","totalResult","parseFloat","itemDataValues","sort","ele1","ele2","fetchDataParallel","fetchMemDataParallel","device","fetchDiskIODataParallel","error","toFixed","poolName","filterStr","file","pid_hash","host","status","rowObj","fetchMemData","fetchDiskIOData","fetchDiskCapacityData","fetchNetworkIOData","fetchProcCpuTopData","fetchProcMemTopData","fetchMysqlConnStats","fetchMysqlConnError","fetchMysqlTpsQps","fetchMysqlCommandQps","fetchMysqlQuerySlow","fetchMysqlSlowThreshold","fetchMysqlBufferPoolPages","fetchMysqlBufferPoolHits","fetchMysqlBufferPageSize","fetchMysqlBufferPoolSize","fetchNginxHttpStatus","fetchPhpfpmPoolConns","fetchPhpfpmPoolStartTime","fetchPhpfpmPoolMacActiveProc","fetchPhpfpmPoolProcThresholdTimes","fetchPhpfpmPoolProcess","fetchPhpfpmPoolReqLatency","fetchPhpfpmPoolReqSlow","fetchBackupSize","fetchBackupDuration","fetchBackupTimestamp","setInterval","rowPanels","i","cols","chartConfigRow","panelTitle","j","colKey","chartData","key","span","chartProps","rowKey","rowIdx2Key","header","gutter","defaultActiveKey","onChange","prototype","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","MysqlPanel","tickCount","NginxPanel","PhpFpmPanel","PrometheusPanel","BackupsPanel","TabPane","Tabs","ServicePage","dataConfigs","tabTitle","tabPanes","tab","tabPaneKey","title2Component","onTabChange","centered","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3b6c0dd6.chunk.js","sourcesContent":["import React from 'react';\nimport { Line } from '@ant-design/charts';\n\nclass LineChart extends React.Component {\n    render() {\n        const xFieldName = this.props.xFieldName;\n        const yFieldName = this.props.yFieldName;\n        const pointsData = this.props.pointsData;\n        const chartTitle = this.props.title;\n        const chartDesc  = this.props.desc;\n        const seriesField = this.props.seriesField;\n\n        const config = {\n            title: {\n                visible: false,\n                text: chartTitle,\n            },\n            description: {\n                visible: true,\n                text: chartDesc,\n            },\n            xField: xFieldName,\n            yField: yFieldName,\n            seriesField,\n            data: pointsData,\n\n            padding: 'auto',\n            forceFit: true,\n            label: {\n                visible: true,\n                type: 'point',\n            },\n            point: {\n                visible: true,\n                size: 2,\n                shape: 'circle',\n                style: {\n                    fill: 'white',\n                    stroke: '#2593fc',\n                    lineWidth: 1,\n                },\n            },\n            legend: { position: 'right-top' },\n            yAxis: this.props.yAxis,\n        };\n\n        return (\n            <div>\n                <Line {...config} />;\n            </div>\n        );\n    }\n}\n\nexport default LineChart;","import React from 'react';\nimport { Bullet } from '@ant-design/charts';\n\nclass BulletChart extends React.Component {\n    render() {\n      let target = 85;\n      let ranges = [ 0, 0.5, 0.85, 1 ];\n      let rangeMax = 100;\n\n      let configData = [];\n      this.props.data.forEach(element => {\n        configData.push({\n          title: element.bulletTitle,\n          measures: [element.bulletMeasure],\n          targets: [target],\n          ranges,\n        })\n      });\n      \n      const config = {\n          title: {\n            visible: false,\n            text: this.props.chartTitle,\n          },\n          description: {\n            visible: true,\n            text: this.props.chartDesc,\n          },\n          data: configData,\n          rangeMax,\n          rangeColors: ['#B4EBBF', '#FFDBA2', '#FFB1AC'],\n          // legend: {\n          //   custom: true,\n          //   items: [\n          //     {\n          //       name: '实际进度',\n          //       marker: {\n          //         symbol: 'square',\n          //         style: { fill: '#5B8FF9' },\n          //       },\n          //     },\n          //     {\n          //       name: '目标值',\n          //       marker: {\n          //         symbol: 'line',\n          //         style: { stroke: '#5B8FF9' },\n          //       },\n          //     },\n          //     {\n          //       name: '差',\n          //       marker: {\n          //         symbol: 'square',\n          //         style: { fill: '#FFB1AC' },\n          //       },\n          //     },\n          //     {\n          //       name: '良',\n          //       marker: {\n          //         symbol: 'square',\n          //         style: { fill: '#FFDBA2' },\n          //       },\n          //     },\n          //     {\n          //       name: '优',\n          //       marker: {\n          //         symbol: 'square',\n          //         style: { fill: '#B4EBBF' },\n          //       },\n          //     },\n          //   ],\n          // },\n        };\n\n      return (\n          <Bullet {...config} />\n      )\n    }\n}\n\nexport default BulletChart;","function inIFrame() { \n    if ( window.location !== window.parent.location ) { \n        return true;\n    } else { \n        return false;\n    } \n}\n\n//  use document.domain to implement cross-domain refs\n// eslint-disable-next-line no-restricted-globals\nif(inIFrame()) {\n    document.domain = 'lgxzj.wiki'\n}\n\n// 计算页面的实际高度，iframe自适应会用到\nfunction calcPageHeight(ele) {\n    // console.log(\"body scroll height:\", doc.body.scrollHeight);\n    // console.log(\"doc ele scroll height:\", doc.documentElement.scrollHeight);\n    // console.log(\"body client height:\", doc.body.clientHeight);\n    // console.log(\"doc ele client height:\", doc.documentElement.clientHeight);\n    // console.log(\"body offset height:\", doc.body.offsetHeight);\n    // console.log(\"doc ele offset height:\", doc.documentElement.offsetHeight);\n\n    var height = Math.max(ele.scrollHeight, ele.scrollHeight);\n    return height;\n}\n\nfunction iframeChangedHandler() {\n    if (!inIFrame()) {\n        console.log(\"not inside iframe, no need to change iframe size\");\n        return;\n    }\n\n    var height = calcPageHeight(document.getElementById('root'));\n    \n    // eslint-disable-next-line no-restricted-globals\n    var parentIFrameNode = parent.document.getElementById('ifr');\n    if (parentIFrameNode !== null) {\n        console.log(\"changing parent iframe('ifr') to size:\", height);\n        parentIFrameNode.style.height = height + 'px';\n    }\n}\n\nexport default iframeChangedHandler;","import React from 'react';\n\nimport { Liquid } from '@ant-design/charts';\n\nclass LiquidChart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            curValue: props.curValue,\n            maxValue: props.maxValue,\n            desc: props.desc,\n        }\n    }\n\n    render() {\n        const config = {\n            description: {\n              visible: true,\n              text: this.state.desc,\n            },\n            min: 0,\n            max: this.state.maxValue,\n            value: this.state.curValue,\n        };\n\n        return (\n            <Liquid {...config} ></Liquid>\n        );\n    }\n}\n\nexport default LiquidChart;","import React from 'react';\n\nimport { Statistic } from 'antd';\n\nclass StatisticChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: this.props.desc,\n            value: this.props.value,\n        }\n    }\n\n    render() {\n        return (\n            <Statistic {...this.state} >\n            </Statistic>\n        );\n    }\n}\n\nexport default StatisticChart;","import React from 'react';\n\nimport { Pie } from '@ant-design/charts';\n\nclass PieChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title:  props.chartTitle,\n            desc:   props.desc,\n            data:   props.data,\n        }\n    }\n\n    render() {\n        const config = {\n            forceFit: true,\n            title: {\n              visible: true,\n              text: this.state.title,\n            },\n            description: {\n              visible: true,\n              text: this.state.desc,\n            },\n            radius: 0.8,\n            data: this.state.data,\n            angleField: 'value',\n            colorField: 'type',\n            label: {\n              visible: true,\n              // type: 'outer-center',\n              // formatter:  (text, item) => `${item._origin.type}: ${item._origin.value}`,\n              type: 'spider',\n            },\n          };\n\n        return (\n            <Pie {...config}>\n\n            </Pie>\n        );\n    }\n}\n\nexport default PieChart;","import React from 'react';\nimport { Column } from '@ant-design/charts';\n\nclass ColumnChart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ...props\n        }\n    }\n\n    render() {\n        const config = {\n            description: {\n              visible: true,\n              text: this.state.desc,\n            },\n            forceFit: true,\n            data: this.state.data,\n            padding: 'auto',\n            xField: 'name',\n            yField: 'value',\n            meta: {\n              name: { alias: '备份' },\n              value: { alias: '值' },\n            },\n            label: {\n              visible: true,\n              position: 'middle',\n            },\n        };\n\n        return (\n            <Column {...config} />\n        );\n    }\n}\n\nexport default ColumnChart;","import React from 'react';\nimport { Row, Col,Spin, Collapse, Card } from 'antd';\n\nimport LineChart from './LineChart';\nimport BulletChart from './BulletChart';\nimport IFrameChangeHandler from './IFrameChild';\n\nimport 'antd/dist/antd.css';\nimport LiquidChart from './LiquidChart';\nimport StatisticChart from './StatisticChart';\nimport PieChart  from './PieChart';\nimport ColumnChart from './ColumnChart';\n\nconst { Panel } = Collapse;\nconst axios = require('axios').default;\n\nclass MonitorPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = props;\n\n        this.fetchData           = this.fetchData.bind(this);\n        this.fetchCpuData        = this.fetchCpuData.bind(this);\n        this.genQueryTimeRange   = this.genQueryTimeRange.bind(this);\n        this.panelChanged        = this.panelChanged.bind(this);\n    }\n\n    panelChanged() {\n        setTimeout(IFrameChangeHandler, 500);;\n    }\n\n    genQueryTimeRange() {\n        const timestampEnd = Math.floor(Date.now() / 1000);\n        const timestampStart = timestampEnd - 5;\n\n        return {\n            start:  timestampStart,\n            end:    timestampEnd,\n            step:   \"1s\",\n        };\n    }\n\n    rowIdx2Key(idx) {\n        return \"row_\" + idx.toString();\n    }\n\n    unixTimestamp2DateFormat(timestamp) {\n        return new Date(timestamp * 1000).Format(\"HH:mm:ss\");\n    }\n\n    stringValue2Int(strValue) {\n        return parseInt(strValue);\n    }\n\n    getResultFromResponse(res) {\n         return res.data.data.result;\n    }\n\n    updateChartData2State(row, rowIdx, col, colIdx, data) {\n        //row[colIdx].pointsData = data;\n        this.setState((preState) => {\n            var newState = JSON.parse(JSON.stringify(preState));\n            const ele = newState.chartDataArray[rowIdx].chartConfigs[colIdx];\n            ele.pointsData = data;\n            ele.loading = false;\n            return newState;\n        });\n    }\n\n    updateChartLoading2State(row, rowIdx, col, colIdx, loading) {\n        this.setState((preState) => {\n            var newState = JSON.parse(JSON.stringify(preState));\n            newState.chartDataArray[rowIdx].chartConfigs[colIdx].loading = loading;\n            return newState;\n        });\n    }\n\n    fetchCpuData(row, rowIdx, col, colIdx) {\n        let timeRange = this.genQueryTimeRange();\n        let url = this.state.chartDataArray[rowIdx].chartConfigs[colIdx].queryUrl;\n\n        this.updateChartLoading2State(row, rowIdx, col, colIdx, true);\n\n        axios.get(url, {\n            params: {\n                ...timeRange,\n                query:  \"100 - (irate(node_cpu_seconds_total{mode=\\\"idle\\\"}[15s]) * 100)\"\n            }\n        })\n            .then( (res) => {\n                var machineResult = this.getResultFromResponse(res);\n\n                const machineDataChart = [];\n                machineResult.forEach((cpuData, cpuIdx) => {\n                    const cpuDataValues = cpuData.values;\n                    const cpuName = cpuData.metric.cpu;\n                    \n                    cpuDataValues.forEach((point) => {\n                        let pointDate = this.unixTimestamp2DateFormat(point[0]);\n                        const cpuUsage = this.stringValue2Int(point[1]);\n                        machineDataChart.push(\n                            {\n                                [this.state.xFieldName]: pointDate,\n                                [this.state.yFieldName]: cpuUsage,\n                                [this.state.seriesField]:\"cpu\" + cpuName,\n                            }\n                        )\n                    })\n                    \n                });\n\n                this.updateChartData2State(row, rowIdx, col, colIdx, machineDataChart);\n            })\n            .catch((err) => {\n                console.log(\"get node metrics failed\", err);\n            });\n    }\n\n\n\n    fetchDataParallel(row, rowIdx, col, colIdx, inputs, unitTranslator, labelAppender, valueParser) {\n        let timeRange = this.genQueryTimeRange();\n        const item = this.state.chartDataArray[rowIdx].chartConfigs[colIdx];\n        let url = item.queryUrl;\n\n        let loading  = true;\n        this.updateChartLoading2State(row, rowIdx, col, colIdx, loading);\n\n        const totalPromise = [];\n        inputs.forEach((input) => {\n            totalPromise.push(\n                axios.get(\n                    url,\n                    {\n                        params: {\n                            ...timeRange,\n                            query: input.query,\n                        }\n                    })\n            )\n        });\n\n        const eleProcessor = (dataEle, resIdx, proc, pointDate, value) => {\n            if (unitTranslator != null) {\n                value = unitTranslator(value);\n            }\n\n            let label = inputs[resIdx].label;\n            if (labelAppender != null) {\n                let appendLabelPart = labelAppender(dataEle)\n                if (appendLabelPart != null) {\n                    if (label != null && label.length !== 0) {\n                        label += \"_\";\n                    }\n                    label += appendLabelPart;\n                }\n            }\n            \n            switch (item.chartType) {\n                case 'bullet':\n                    return {\n                            bulletTitle: proc,\n                            bulletMeasure: value,\n                    };\n                    \n                case 'line':\n                    return {\n                        [this.state.xFieldName]: pointDate,\n                        [this.state.yFieldName]: value,\n                        [this.state.seriesField]:label,\n                    };\n                case 'column':\n                    return {\n                        name: label,\n                        value: value,\n                    };\n                case 'liquid':\n                    return {\n                        curValue: value,\n                        maxValue: item.maxValue,\n                    };\n                case 'statistics':\n                    return {\n                        value: value,\n                    };\n                case 'pie':\n                    return {\n                        type: label,\n                        value: value,\n                    };\n\n                default:\n                    throw 'unexpected chart type:' + item.chartType;\n            }\n        }\n\n        Promise.all(totalPromise)\n            .then((resArray) => {\n                let totalResult = [];\n\n                resArray.forEach((res, resIdx) => {\n                    var machineResult = this.getResultFromResponse(res);\n                    \n\n                    machineResult.forEach((dataEle) => {\n                        if (item.type === 'proc_top_cpu' || \n                            item.type === 'proc_top_mem' || \n                            item.type === 'nginx_http_req_status_metric.lgxzj.wiki' ||\n                            item.type === 'nginx_http_req_status_react.lgxzj.wiki' ||\n                            item.type === 'nginx_http_req_status_www.lgxzj.wiki' ||\n                            item.type === 'phpfpm_wordpress_total_conns' ||\n                            item.type === 'phpfpm_wordpress_start_time' ||\n                            item.type === 'phpfpm_wordpress_max_active_proc' ||\n                            item.type === 'phpfpm_wordpress_proc_threshold_times' ||\n                            item.type === 'phpfpm_sql_total_conns' ||\n                            item.type === 'phpfpm_sql_start_time' ||\n                            item.type === 'phpfpm_sql_max_active_proc' ||\n                            item.type === 'phpfpm_sql_proc_threshold_times' ||\n                            item.type === 'phpfpm_sql_req_slow' ||\n                            item.type === 'backup_mysql_size' ||\n                            item.type === 'backup_wordpress_size' ||\n                            item.type === 'backup_mysql_duration' ||\n                            item.type === 'backup_wordpress_duration' ||\n                            item.type === 'backup_mysql_timestamp' ||\n                            item.type === 'backup_wordpress_timestamp') {\n\n                            const proc = dataEle.metric.proc;\n                            let pointDate = this.unixTimestamp2DateFormat(dataEle.value[0]);\n                            let value = parseFloat(dataEle.value[1]);\n\n                            totalResult.push(eleProcessor(dataEle, resIdx, proc, pointDate, value));\n                        } else {\n                            const itemDataValues = dataEle.values;\n                            const proc = null;\n                            \n                            itemDataValues.forEach((point) => {\n                                let pointDate = this.unixTimestamp2DateFormat(point[0]);\n                                var value = null;\n                                if (valueParser == null) {\n                                    value = this.stringValue2Int(point[1]);\n                                } else {\n                                    value = valueParser(point[1]);\n                                    console.log(\"--\", value);\n                                }\n                                \n                                totalResult.push(eleProcessor(dataEle, resIdx, proc, pointDate, value));\n                            });\n                        }\n                    });\n                })\n\n                if (item.type === 'proc_top_cpu' || \n                    item.type === 'proc_top_mem' || \n                    item.type === 'nginx_http_req_status_metric.lgxzj.wiki' ||\n                    item.type === 'nginx_http_req_status_react.lgxzj.wiki' ||\n                    item.type === 'nginx_http_req_status_www.lgxzj.wiki' ||\n                    item.type === 'phpfpm_wordpress_total_conns' ||\n                    item.type === 'phpfpm_wordpress_start_time' ||\n                    item.type === 'phpfpm_wordpress_max_active_proc' ||\n                    item.type === 'phpfpm_wordpress_proc_threshold_times' ||\n                    item.type === 'phpfpm_sql_total_conns' ||\n                    item.type === 'phpfpm_sql_start_time' ||\n                    item.type === 'phpfpm_sql_max_active_proc' ||\n                    item.type === 'phpfpm_sql_proc_threshold_times' ||\n                    item.type === 'phpfpm_sql_req_slow') {\n\n                    console.log(\"before update\", totalResult);\n                    totalResult.sort((ele1, ele2) => {\n                        return parseInt(ele2.bulletMeasure) - parseInt(ele1.bulletMeasure);\n                    });\n                    // if (totalResult.length < 10) {\n                    //     let j = 0;\n                    //     let len = 10 - totalResult.length;\n                    //     for (j = 0; j < len; ++j) {\n                    //         totalResult.push({\n                    //             bulletTitle: '无',\n                    //             bulletMeasure: 0,\n                    //         });\n                    //     }\n                    // }\n                    console.log(\"after update\", totalResult);\n                }\n                \n                \n                this.updateChartData2State(row, rowIdx, col, colIdx, totalResult);\n            })\n            .catch((err) => {\n                console.log(\"get metrics failed\", err);\n            });\n    }\n\n    fetchMemDataParallel(row, rowIdx, col, colIdx, inputs) {\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => Math.floor(value / 1024 / 1024),\n            null);\n    }\n\n    fetchMemData(row, rowIdx, col, colIdx) {\n        let machineDataChart = [];\n\n        const inputs = [\n            {\n                query:    \"node_memory_MemTotal_bytes\",\n                label:    \"mem_total\",\n            },\n            {\n                query:      \"node_memory_MemFree_bytes\",\n                label:      \"mem_free\",\n            }\n        ]\n        this.fetchMemDataParallel(row, rowIdx, col, colIdx, inputs, machineDataChart);\n    }\n\n    fetchDiskIODataParallel(row, rowIdx, col, colIdx, inputs) {\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            null,\n            (dataEle) => {\n                if (dataEle.metric.device != null) {\n                    return dataEle.metric.device;\n                }\n                return null;\n            });\n    }\n\n    fetchDiskIOData(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:    \"irate(node_disk_written_bytes_total[15s])\",\n                label:    \"written\",\n            },\n            {\n                query:      \"irate(node_disk_read_bytes_total[15s])\",\n                label:      \"read\",\n            },\n            {\n                query:      \"irate(node_textfile_scrape_error[15s])\",\n                label:      \"open_err\",\n            },\n        ]\n        this.fetchDiskIODataParallel(row, rowIdx, col, colIdx, inputs);\n    }\n\n    fetchNetworkIOData(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:    \"irate(node_network_receive_bytes_total[15s])\",\n                label:    \"recv\",\n            },\n            {\n                query:    \"irate(node_network_receive_errs_total[15s])\",\n                label:    \"recv_err\",\n            },\n            {\n                query:      \"irate(node_network_transmit_bytes_total[15s])\",\n                label:      \"sent\",\n            },\n            {\n                query:      \"irate(node_network_transmit_errs_total[15s])\",\n                label:      \"sent_err\",\n            }\n        ]\n\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => Math.floor(value / 1024),\n            (dataEle) => dataEle.metric.device\n        );\n    }\n\n    fetchProcCpuTopData(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:    \"ps_pusher_cpu\",\n                label:    \"\",\n            }\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            null\n        );\n    }\n\n    fetchProcMemTopData(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:    \"ps_pusher_mem\",\n                label:    \"\",\n            }\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            null\n        );\n    }\n\n    fetchMysqlConnStats(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:    \"mysql_global_variables_max_connections\",\n                label:    \"max_limit_conn\",\n            },\n            {\n                query:    \"mysql_global_status_threads_connected\",\n                label:    \"cur_active_conn\",\n            },\n            {\n                query:    \"mysql_global_status_max_used_connections\",\n                label:    \"max_used_conn\",\n            },\n            {\n                query:    \"mysql_global_status_threads_connected\",\n                label:    \"opened_conn\",\n            }\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            null\n        );\n    }\n\n    fetchMysqlConnError(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:    \"irate(mysql_global_status_connection_errors_total[15s])\",\n                label:    \"err_rate\",\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            (dataEle) => { return dataEle.metric.error; },\n            (value) => parseFloat(parseFloat(value).toFixed(1))\n        );\n    }\n\n    fetchMysqlTpsQps(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:      'irate(mysql_global_status_commands_total{command=~\"(commit)\"}[15s])',\n                label:      \"tps_commit\",\n            },\n            {\n                query:      'irate(mysql_global_status_commands_total{command=~\"(rollback)\"}[15s])',\n                label:      \"tps_rollback\",\n            },\n            {\n                query:      'sum(irate(mysql_global_status_commands_total[15s]))',\n                label:      'qps_all',\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            null,\n            (value) => parseFloat(parseFloat(value).toFixed(1))\n        );\n    }\n\n    fetchMysqlQuerySlow(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:      'irate(mysql_global_status_slow_queries[15s])',\n                label:      \"query_slow\",\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            null,\n            (value) =>  parseFloat(parseFloat(value).toFixed(1))\n        );\n    }\n\n    fetchMysqlSlowThreshold(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:      'mysql_global_variables_long_query_time',\n                label:      \"threshold\",\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            null,\n            (value) =>  parseFloat(parseFloat(value).toFixed(1))\n        );\n    }\n\n    fetchMysqlBufferPoolPages(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:      'mysql_global_status_buffer_pool_pages',\n                label:      \"pages\",\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            (dataEle) => { return dataEle.metric.state; },\n            (value) =>  parseFloat(parseFloat(value).toFixed(1)),\n        );\n    }\n\n    fetchMysqlBufferPoolHits(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:      'irate(mysql_global_status_innodb_buffer_pool_read_requests[15s])',\n                label:      \"hits_per_sec\",\n            },\n            {\n                query:      'irate(mysql_global_status_innodb_buffer_pool_reads[15s])',\n                label:      'non_hits_per_sec'\n            }\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            null,\n            (value) =>  parseFloat(parseFloat(value).toFixed(1)),\n        );\n    }\n\n    fetchMysqlBufferPageSize(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:      'mysql_global_status_innodb_page_size',\n                label:      \"page_size\",\n            }\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,// Math.floor(value / 1024 / 1024 / 1024),\n            null,\n            (value) =>  parseFloat(parseFloat(value).toFixed(1)),\n        );\n    }\n\n    fetchMysqlBufferPoolSize(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:      'mysql_global_variables_innodb_buffer_pool_size',\n                label:      \"page_size\",\n            }\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,// Math.floor(value / 1024 / 1024 / 1024),\n            null,\n            (value) =>  parseFloat(parseFloat(value).toFixed(1)),\n        );\n    }\n\n    fetchPhpfpmPoolProcThresholdTimes(row, rowIdx, col, colIdx, poolName) {\n        const inputs = [\n            {\n                query:      'phpfpm_max_children_reached{pool=\"' + poolName + '\"}',\n                label:      \"proc_thresold_times\",\n            }\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,// Math.floor(value / 1024 / 1024 / 1024),\n            null,\n            (value) =>  parseInt(value)\n        );\n    }\n\n    fetchPhpfpmPoolMacActiveProc(row, rowIdx, col, colIdx, poolName) {\n        const inputs = [\n            {\n                query:      'phpfpm_max_active_processes{pool=\"' + poolName + '\"}',\n                label:      \"max_active_proc\",\n            }\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,// Math.floor(value / 1024 / 1024 / 1024),\n            null,\n            (value) =>  parseInt(value)\n        );\n    }\n\n    fetchPhpfpmPoolConns(row, rowIdx, col, colIdx, poolName) {\n        const inputs = [\n            {\n                query:      'phpfpm_accepted_connections{pool=\"' + poolName + '\"}',\n                label:      \"total_conns\",\n            }\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,// Math.floor(value / 1024 / 1024 / 1024),\n            null,\n            (value) =>  parseInt(value)\n        );\n    }\n\n    fetchPhpfpmPoolReqSlow(row, rowIdx, col, colIdx, poolName) {\n        const inputs = [\n            {\n                query:      'phpfpm_slow_requests{pool=\"' + poolName + '\"}',\n                label:      \"slow_req\",\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            null,\n            (value) =>  parseInt(value)\n        );\n    }\n\n    fetchBackupSize(row, rowIdx, col, colIdx, filterStr) {\n        const inputs = [\n            {\n                query:      'lgxzj_backup_size_total{file=~\"' + filterStr + '.+\"}',\n                label:      \"\",\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => Math.floor(value / 1024),\n            (dataEle) => { return dataEle.metric.file;},\n            (value) =>  parseInt(value)\n        );\n    }\n\n    fetchBackupDuration(row, rowIdx, col, colIdx, filterStr) {\n        const inputs = [\n            {\n                query:      'lgxzj_backup_duration_total{file=~\"' + filterStr + '.+\"}',\n                label:      \"\",\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            (dataEle) => { return dataEle.metric.file;},\n            (value) =>  parseInt(value)\n        );\n    }\n\n    fetchBackupTimestamp(row, rowIdx, col, colIdx, filterStr) {\n        const inputs = [\n            {\n                query:      'lgxzj_backup_timestamps_total{file=~\"' + filterStr + '.+\"}',\n                label:      \"\",\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            (dataEle) => { return dataEle.metric.file;},\n            (value) =>  parseInt(value)\n        );\n    }\n\n    \n\n    fetchPhpfpmPoolReqLatency(row, rowIdx, col, colIdx, poolName) {\n        const inputs = [\n            {\n                query:      'phpfpm_process_request_duration{pool=\"' + poolName + '\"}',\n                label:      \"pidhash\",\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            (dataEle) => { return dataEle.metric.pid_hash;},\n            (value) =>  parseInt(value)\n        );\n    }\n\n    fetchPhpfpmPoolProcess(row, rowIdx, col, colIdx, poolName) {\n        const inputs = [\n            {\n                query:      'phpfpm_active_processes{pool=\"' + poolName + '\"}',\n                label:      \"active\",\n            },\n            {\n                query:      'phpfpm_idle_processes{pool=\"' + poolName + '\"}',\n                label:      \"idle\",\n            },\n            {\n                query:      'phpfpm_total_processes{pool=\"' + poolName + '\"}',\n                label:      \"total\",\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            null,\n            (value) =>  parseInt(value)\n        );\n    }\n\n    fetchPhpfpmPoolStartTime(row, rowIdx, col, colIdx, poolName) {\n        const inputs = [\n            {\n                query:      'phpfpm_start_since{pool=\"' + poolName + '\"}',\n                label:      \"start_time\",\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => Math.floor(value / 60),\n            null,\n            (value) =>  parseInt(value)\n        );\n    }\n\n    fetchNginxHttpStatus(row, rowIdx, col, colIdx, host) {\n        const inputs = [\n            {\n                query:      'nginx_http_requests_total{host=\"' + host + '\"}',\n                label:      \"http\",\n            }\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            (dataEle) => { return dataEle.metric.status;},\n            (value) => parseInt(value)\n        );\n    }\n\n    fetchMysqlCommandQps(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:      'irate(mysql_global_status_commands_total{command=~\"(select)\"}[15s])',\n                label:      \"qps_select\",\n            },\n            {\n                query:      'irate(mysql_global_status_commands_total{command=~\"(delete)\"}[15s])',\n                label:      'qps_delete',\n            },\n            {\n                query:      'irate(mysql_global_status_commands_total{command=~\"(update)\"}[15s])',\n                label:      'qps_update',\n            },\n            {\n                query:      'irate(mysql_global_status_commands_total{command=~\"(insert)\"}[15s])',\n                label:      'qps_insert',\n            },\n        ];\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => value,\n            null,\n            (value) =>  parseFloat(parseFloat(value).toFixed(1))\n        );\n    }\n\n    fetchDiskCapacityData(row, rowIdx, col, colIdx) {\n        const inputs = [\n            {\n                query:    \"node_filesystem_size_bytes\",\n                label:    \"size_total\",\n            },\n            {\n                query:    \"node_filesystem_size_bytes-node_filesystem_avail_bytes\",\n                label:    \"size_used\",\n            },\n            \n        ]\n\n        this.fetchDataParallel(\n            row, \n            rowIdx, \n            col, \n            colIdx, \n            inputs, \n            (value) => Math.floor(value / 1024 / 1024 / 1024),\n            (dataEle) => { return dataEle.metric.device;}\n        );\n    }\n\n    fetchData() {\n        this.state.chartDataArray.forEach((rowObj, rowIdx) => {\n            const row = rowObj.chartConfigs;\n            row.forEach((col, colIdx) => {\n                switch (col.type) {\n                    case \"cpu\":         this.fetchCpuData(row, rowIdx, col, colIdx);            break;\n                    case \"mem\":         this.fetchMemData(row, rowIdx, col, colIdx);            break;\n                    case \"disk_io\":     this.fetchDiskIOData(row, rowIdx, col, colIdx);         break;\n                    case \"disk_cap\":    this.fetchDiskCapacityData(row, rowIdx, col, colIdx);   break;\n                    case \"net_io\":      this.fetchNetworkIOData(row, rowIdx, col, colIdx);      break;\n                    \n                    case 'proc_top_cpu':this.fetchProcCpuTopData(row, rowIdx, col, colIdx);     break;\n                    case 'proc_top_mem':this.fetchProcMemTopData(row, rowIdx, col, colIdx);     break;\n\n                    case 'mysql_conn_stats':    this.fetchMysqlConnStats(row, rowIdx, col, colIdx);     break;\n                    case 'mysql_conn_err':      this.fetchMysqlConnError(row, rowIdx, col, colIdx);     break;\n\n                    case 'mysql_tps_qps':       this.fetchMysqlTpsQps(row, rowIdx, col, colIdx);        break;\n                    case 'mysql_command_qps':   this.fetchMysqlCommandQps(row, rowIdx, col, colIdx);    break;\n                    case 'mysql_query_slow':    this.fetchMysqlQuerySlow(row, rowIdx, col, colIdx);     break;\n                    case 'mysql_slow_threshold':this.fetchMysqlSlowThreshold(row, rowIdx, col, colIdx); break;\n\n                    case 'mysql_buffer_pool_pages':     this.fetchMysqlBufferPoolPages(row, rowIdx, col, colIdx);   break;\n                    case 'mysql_buffer_pool_hits':      this.fetchMysqlBufferPoolHits(row, rowIdx, col, colIdx);    break;\n                    case 'mysql_buffer_pool_page_size': this.fetchMysqlBufferPageSize(row, rowIdx, col, colIdx);    break;\n                    case 'mysql_buffer_pool_size':      this.fetchMysqlBufferPoolSize(row, rowIdx, col, colIdx);    break;\n                    \n                    case 'nginx_http_req_status_metric.lgxzj.wiki':         this.fetchNginxHttpStatus(row, rowIdx, col, colIdx, \"metric.lgxzj.wiki\");       break;\n                    case 'nginx_http_req_status_react.lgxzj.wiki':          this.fetchNginxHttpStatus(row, rowIdx, col, colIdx, \"react.lgxzj.wiki\");        break;\n                    case 'nginx_http_req_status_www.lgxzj.wiki':            this.fetchNginxHttpStatus(row, rowIdx, col, colIdx, \"www.lgxzj.wiki\");          break;\n\n                    case 'phpfpm_wordpress_total_conns':    this.fetchPhpfpmPoolConns(row, rowIdx, col, colIdx, \"wordpress\");       break;\n                    case 'phpfpm_wordpress_start_time':     this.fetchPhpfpmPoolStartTime(row, rowIdx, col, colIdx, \"wordpress\");   break;\n\n                    case 'phpfpm_wordpress_max_active_proc':        this.fetchPhpfpmPoolMacActiveProc(row, rowIdx, col, colIdx, \"wordpress\");       break;\n                    case 'phpfpm_wordpress_proc_threshold_times':   this.fetchPhpfpmPoolProcThresholdTimes(row, rowIdx, col, colIdx, \"wordpress\");   break;\n\n                    case 'phpfpm_wordpress_process':        this.fetchPhpfpmPoolProcess(row, rowIdx, col, colIdx, \"wordpress\");   break;\n                    case 'phpfpm_wordpress_req_latency':    this.fetchPhpfpmPoolReqLatency(row, rowIdx, col, colIdx, \"wordpress\");   break;\n                    case 'phpfpm_wordpress_req_slow':    this.fetchPhpfpmPoolReqSlow(row, rowIdx, col, colIdx, \"wordpress\");   break;\n\n                    case 'phpfpm_sql_total_conns':    this.fetchPhpfpmPoolConns(row, rowIdx, col, colIdx, \"sql\");       break;\n                    case 'phpfpm_sql_start_time':     this.fetchPhpfpmPoolStartTime(row, rowIdx, col, colIdx, \"sql\");   break;\n\n                    case 'phpfpm_sql_max_active_proc':        this.fetchPhpfpmPoolMacActiveProc(row, rowIdx, col, colIdx, \"sql\");       break;\n                    case 'phpfpm_sql_proc_threshold_times':   this.fetchPhpfpmPoolProcThresholdTimes(row, rowIdx, col, colIdx, \"sql\");   break;\n\n                    case 'phpfpm_sql_process':        this.fetchPhpfpmPoolProcess(row, rowIdx, col, colIdx, \"sql\");   break;\n                    case 'phpfpm_sql_req_latency':    this.fetchPhpfpmPoolReqLatency(row, rowIdx, col, colIdx, \"sql\");   break;\n                    case 'phpfpm_sql_req_slow':       this.fetchPhpfpmPoolReqSlow(row, rowIdx, col, colIdx, \"sql\");   break;\n                    \n                    case 'backup_mysql_size':       this.fetchBackupSize(row, rowIdx, col, colIdx, \"mysql_backup_\");   break;\n                    case 'backup_wordpress_size':   this.fetchBackupSize(row, rowIdx, col, colIdx, \"wordpress_backup_\");   break;\n\n                    case 'backup_mysql_duration':   this.fetchBackupDuration(row, rowIdx, col, colIdx, \"mysql_backup_\");   break;\n                    case 'backup_wordpress_duration':   this.fetchBackupDuration(row, rowIdx, col, colIdx, \"wordpress_backup_\");   break;\n\n                    case 'backup_mysql_timestamp':   this.fetchBackupTimestamp(row, rowIdx, col, colIdx, \"mysql_backup_\");   break;\n                    case 'backup_wordpress_timestamp':   this.fetchBackupTimestamp(row, rowIdx, col, colIdx, \"wordpress_backup_\");   break;\n\n                    default:        break;\n                }\n            })\n        })\n    }\n\n    componentDidMount() {\n        this.fetchData();\n\n        const intervalSecond = 5000;\n        setInterval(this.fetchData, intervalSecond);\n    }\n    componentWillUnmount() {\n        \n    }\n\n    render() {\n        const rowPanels = [];\n        for (let i = 0; i < this.state.chartDataArray.length; ++i) {\n            const cols = [];\n\n            const chartConfigRow = this.state.chartDataArray[i].chartConfigs;\n            const panelTitle = this.state.chartDataArray[i].panelTitle;\n            for (let j = 0; j < chartConfigRow.length; ++j) {\n                let colKey = \"col_\" + i.toString() + \"_\" + j.toString();\n                let chartData = chartConfigRow[j];\n\n                if (chartData.chartType === 'line') {\n                    const data = {\n                        xFieldName: this.state.xFieldName,\n                        yFieldName: this.state.yFieldName,\n                        seriesField: this.state.seriesField,\n                        pointsData: chartData.pointsData,\n                        title: chartData.title,\n                        desc: chartData.desc,\n                        yAxis: chartData.yAxis,\n                    }\n    \n                    \n                    cols.push(\n                        <Col key={colKey} span={12} > \n                            <Card title={chartData.title}>\n                                { chartData.loading ? <Spin><LineChart {...data} /></Spin> : <LineChart {...data} /> }\n                            </Card>\n                            \n                        </Col>\n                    );\n                }\n                if (chartData.chartType === 'bullet') {\n                    const config = {\n                        data: chartData.pointsData,\n                        chartTitle: chartData.title,\n                        chartDesc: chartData.desc,\n                    };\n                    cols.push(\n                        <Col key={colKey} span={12} > \n                            <Card title={chartData.title}>\n                                { chartData.loading ? <Spin><BulletChart {...config} /></Spin> : <BulletChart {...config} /> }\n                            </Card>    \n                        </Col>\n                    )\n                }\n                if (chartData.chartType === 'liquid') {\n                    const config = {\n                        desc: chartData.desc,\n                        curValue: chartData.pointsData.length === 0 ? null : chartData.pointsData[chartData.pointsData.length - 1].curValue,\n                        maxValue: chartData.pointsData.length === 0 ? null : chartData.pointsData[chartData.pointsData.length - 1].maxValue,\n                    };\n                    cols.push(\n                        <Col key={colKey} span={12} > \n                            <Card title={chartData.title}>\n                                { chartData.loading ? <Spin><LiquidChart {...config} /></Spin> : <LiquidChart {...config} /> }\n                            </Card>    \n                        </Col>\n                    )\n                }\n                if (chartData.chartType === 'statistics') {\n                    const config = {\n                        desc: chartData.desc,\n                        value: chartData.pointsData.length === 0 ? null : chartData.pointsData[chartData.pointsData.length - 1].value,\n                    };\n                    cols.push(\n                        <Col key={colKey} span={12} > \n                            <Card title={chartData.title}>\n                                { chartData.loading ? <Spin><StatisticChart {...config} /></Spin> : <StatisticChart {...config} /> }\n                            </Card>    \n                        </Col>\n                    )\n                }\n                if (chartData.chartType === 'pie') {\n                    const config = {\n                            title:  chartData.title,\n                            desc:   chartData.desc,\n                            data:   chartData.pointsData.length === 0 ? [] : chartData.pointsData,\n                    };\n                    cols.push(\n                        <Col key={colKey} span={12} > \n                            <Card title={chartData.title}>\n                                { chartData.loading ? <Spin><PieChart {...config} /></Spin> : <PieChart {...config} /> }\n                            </Card>    \n                        </Col>\n                    )\n                }\n                if (chartData.chartType === 'column') {\n                    const chartProps = {\n                        title:  chartData.title,\n                        desc:   chartData.desc,\n                        data:   chartData.pointsData,\n                    }\n                    cols.push(\n                        <Col key={colKey} span={12} >\n                            <Card title={chartData.title}>\n                                { chartData.loading ? <Spin><ColumnChart {...chartProps} /></Spin> : <ColumnChart {...chartProps} /> }\n                            </Card>\n                        </Col>\n                    );\n                }\n            }\n\n            const rowKey = this.rowIdx2Key(i);\n            rowPanels.push(\n                <Panel header={panelTitle} key={rowKey}>\n                    <Row key={rowKey} gutter={[16, 16]}>\n                        {cols}\n                    </Row>\n                </Panel>\n            )\n        }\n\n        return (\n            <div>\n                <Collapse defaultActiveKey={[this.rowIdx2Key(0)]} onChange={this.panelChanged} >\n                    {rowPanels}\n                </Collapse>\n                \n            </div>\n        );\n    }\n}\n\n// 对Date的扩展，将 Date 转化为指定格式的String\n// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符， \n// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字) \n// 例子： \n// (new Date()).Format(\"yyyy-MM-dd hh:mm:ss.S\") ==> 2006-07-02 08:09:04.423 \n// (new Date()).Format(\"yyyy-M-d h:m:s.S\")      ==> 2006-7-2 8:9:4.18 \nDate.prototype.Format = function (fmt) { //author: meizz \n    var o = {\n        \"M+\": this.getMonth() + 1, //月份 \n        \"d+\": this.getDate(), //日 \n        \"H+\": this.getHours(), //小时 \n        \"m+\": this.getMinutes(), //分 \n        \"s+\": this.getSeconds(), //秒 \n        \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度 \n        \"S\": this.getMilliseconds() //毫秒 \n    };\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n    if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n}\n\nexport default MonitorPanel;","import React from 'react';\n\nimport MonitorPage from './MonitorPanel';\n\nclass MachinePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            xFieldName: \"x\",\n            yFieldName: \"y\",\n            seriesField: 'type',\n            \n            chartDataArray: [\n                {\n                    panelTitle: 'Cpu & Mem',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'cpu',\n                            chartType: 'line',\n                            title: \"CPU 负载\",\n                            desc: \"按cpu分组的负载率\",\n                            yAxis: {\n                                visible: true,\n                                min: 0,\n                                max: 110,\n                                tickCount: 5,\n                            },\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'mem',\n                            chartType: 'line',\n                            title: \"内存 负载\",\n                            desc: \"内存资源使用情况，单位MB\",\n                            yAxis: {\n                                visible: true,\n                                min: 0,\n                                max: 4400,\n                                tickCount: 5,\n                            },\n                            loading: true,\n                        },\n                        \n                    ],\n                },\n                {\n                    panelTitle: 'Network',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'net_io',\n                            chartType: 'line',\n                            title: \"网络 IO\",\n                            desc: \"网络收发负载，单位KB\",\n                            loading: true,\n                        },\n                    ],\n                },\n                {\n                    panelTitle: 'Disk IO & Caps',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'disk_io',\n                            chartType: 'line',\n                            title: \"磁盘 IO\",\n                            desc: \"磁盘读写负载，单位KB\",\n                            // yAxis: {\n                            //     visible: true,\n                            //     min: 0,\n                            //     max: 1024 * 50,\n                            //     tickCount: 5,\n                            // },\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'disk_cap',\n                            chartType: 'line',\n                            title: \"磁盘 容量\",\n                            desc: \"磁盘使用情况，单位GB\",\n                            yAxis: {\n                                visible: true,\n                                min: 0,\n                                max: 100,\n                                tickCount: 5,\n                            },\n                            loading: true,\n                        },\n                        \n                    ],\n                },\n                {\n                    panelTitle: 'Proc Intensives',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'proc_top_cpu',\n                            chartType: 'bullet',\n                            title: \"CPU活跃TOP10\",\n                            desc: \"CPU活跃进程，单位百分比\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'proc_top_mem',\n                            chartType: 'bullet',\n                            title: \"MEM活跃TOP10\",\n                            desc: \"CPU活跃进程，单位百分比\",\n                            loading: true,\n                        }\n                    ]\n                },\n                \n            ],\n        };\n    }\n\n    render() {\n        return (\n            <MonitorPage {...this.state} />\n        );\n    }\n}\n\nexport default MachinePage;","import React from 'react';\n\nimport MonitorPanel from './MonitorPanel';\n\nclass MysqlPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = this.state = {\n            xFieldName: \"x\",\n            yFieldName: \"y\",\n            seriesField: 'type',\n            \n            chartDataArray: [\n                {\n                    panelTitle: 'Connections',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'mysql_conn_stats',\n                            chartType: 'line',\n                            title: \"MySQL 连接状态\",\n                            desc: \"打开/当前/最大/峰值 连接\",\n                            yAxis: {\n                                visible: true,\n                                min: 0,\n                                max: 400,\n                                tickCount: 5,\n                            },\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'mysql_conn_err',\n                            chartType: 'line',\n                            title: \"MySQL 连接错误数\",\n                            desc: \"MySQL连接错误，按错误分类\",\n                            yAxis: {\n                                visible: true,\n                                min: 0,\n                                max: 400,\n                                tickCount: 5,\n                            },\n                            loading: true,\n                        },                        \n                    ],\n                },\n                {\n                    panelTitle: '查询吞吐量',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'mysql_tps_qps',\n                            chartType: 'line',\n                            title: \"MySQL TPS/QPS Summary\",\n                            desc: \"TPS/QPS\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'mysql_command_qps',\n                            chartType: 'line',\n                            title: \"MySQL QPS By Command\",\n                            desc: \"按命令分类QPS\",\n                            loading: true,\n                        },\n                    ]\n                },\n                {\n                    panelTitle: '查询性能',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'mysql_query_slow',\n                            chartType: 'line',\n                            title: \"MySQL Slow Query\",\n                            desc: \"慢查询率\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'mysql_slow_threshold',\n                            chartType: 'liquid',\n                            maxValue: 50,\n                            title: \"MySQL 慢查询阈值\",\n                            desc: \"慢查询阈值，单位喵\",\n                            loading: true,\n                        },\n                    ]\n                },\n                {\n                    panelTitle: 'InnoDB缓存',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'mysql_buffer_pool_size',\n                            chartType: 'statistics',\n                            title: \"MySQL Buffer Pool Size\",\n                            desc: \"InnoDB缓存池大小, 单位KB\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'mysql_buffer_pool_page_size',\n                            chartType: 'statistics',\n                            title: \"MySQL Buffer Pool Page Size\",\n                            desc: \"InnoDB缓存池页面大小, 单位KB\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'mysql_buffer_pool_pages',\n                            chartType: 'line',\n                            title: \"MySQL Buffer Pool Pages\",\n                            desc: \"InnoDB缓存池页面数，按类型分类\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'mysql_buffer_pool_hits',\n                            chartType: 'line',\n                            title: \"MySQL Buffer Pool Hit Status\",\n                            desc: \"InnoDB缓存池页面命中状态\",\n                            loading: true,\n                        },\n                    ]\n                }\n            ],\n        };\n    }\n    \n\n\n    render() {\n        return (\n            <MonitorPanel {...this.state} >\n            </MonitorPanel>\n        );\n    }\n}\n\nexport default MysqlPanel;","import React from 'react';\n\nimport MonitorPanel from './MonitorPanel';\n\nclass NginxPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = this.state = {\n            xFieldName: \"x\",\n            yFieldName: \"y\",\n            seriesField: 'type',\n            \n            chartDataArray: [\n                {\n                    panelTitle: 'Wordpress Blog Site',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'nginx_http_req_status_www.lgxzj.wiki',\n                            chartType: 'pie',\n                            title: \"www.lgxzj.wiki请求响应分布\",\n                            desc: \"\",\n                            loading: true,\n                        },                        \n                    ],\n                },\n                {\n                    panelTitle: 'React Pages',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'nginx_http_req_status_metric.lgxzj.wiki',\n                            chartType: 'pie',\n                            title: \"metric.lgxzj.wiki请求响应分布\",\n                            desc: \"\",\n                            loading: true,\n                        }, \n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'nginx_http_req_status_react.lgxzj.wiki',\n                            chartType: 'pie',\n                            title: \"react.lgxzj.wiki请求响应分布\",\n                            desc: \"\",\n                            loading: true,\n                        },                        \n                    ],\n                },\n            ],\n        };\n    }\n\n\n\n    render() {\n        return (\n            <MonitorPanel {...this.state} >\n            </MonitorPanel>\n        );\n    }\n}\n\nexport default NginxPanel;","import React from 'react';\n\nimport MonitorPanel from './MonitorPanel';\n\nclass PhpFpmPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = this.state = {\n            xFieldName: \"x\",\n            yFieldName: \"y\",\n            seriesField: 'type',\n            \n            chartDataArray: [\n                {\n                    panelTitle: 'Wordpress WorkerPool',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'phpfpm_wordpress_total_conns',\n                            chartType: 'statistics',\n                            title: \"Accepted Conns\",\n                            desc: \"累计连接数\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'phpfpm_wordpress_start_time',\n                            chartType: 'statistics',\n                            title: \"Start Time\",\n                            desc: \"启动时间，单位分钟\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'phpfpm_wordpress_max_active_proc',\n                            chartType: 'statistics',\n                            title: \"最大历史活跃进程数\",\n                            desc: \"\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'phpfpm_wordpress_proc_threshold_times',\n                            chartType: 'statistics',\n                            title: \"进程fork触限次数\",\n                            desc: \"\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'phpfpm_wordpress_process',\n                            chartType: 'line',\n                            title: \"进程池\",\n                            desc: \"进程池进程数量，按状态分类\",\n                            loading: true,\n                        },  \n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'phpfpm_wordpress_req_latency',\n                            chartType: 'line',\n                            title: \"请求耗时\",\n                            desc: \"单位毫秒\",\n                            loading: true,\n                        },   \n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'phpfpm_wordpress_req_slow',\n                            chartType: 'statistics',\n                            title: \"慢查询次数\",\n                            desc: \"超过request_slowlog_timeout耗时的查询次数\",\n                            loading: true,\n                        },   \n                    ],\n                },\n                {\n                    panelTitle: 'Sql WorkerPool',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'phpfpm_sql_total_conns',\n                            chartType: 'statistics',\n                            title: \"Accepted Conns\",\n                            desc: \"累计连接数\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'phpfpm_sql_start_time',\n                            chartType: 'statistics',\n                            title: \"Start Time\",\n                            desc: \"启动时间，单位分钟\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'phpfpm_sql_max_active_proc',\n                            chartType: 'statistics',\n                            title: \"最大历史活跃进程数\",\n                            desc: \"\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'phpfpm_sql_proc_threshold_times',\n                            chartType: 'statistics',\n                            title: \"进程fork触限次数\",\n                            desc: \"\",\n                            loading: true,\n                        },\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'phpfpm_sql_process',\n                            chartType: 'line',\n                            title: \"进程池\",\n                            desc: \"进程池进程数量，按状态分类\",\n                            loading: true,\n                        },  \n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'phpfpm_sql_req_latency',\n                            chartType: 'line',\n                            title: \"请求耗时\",\n                            desc: \"单位毫秒\",\n                            loading: true,\n                        },  \n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                            pointsData: [],\n                            type: 'phpfpm_sql_req_slow',\n                            chartType: 'statistics',\n                            title: \"慢查询次数\",\n                            desc: \"超过request_slowlog_timeout耗时的查询次数\",\n                            loading: true,\n                        },   \n                    ],\n                },\n            ],\n        };\n    }\n\n\n\n    render() {\n        return (\n            <MonitorPanel {...this.state} >\n            </MonitorPanel>\n        );\n    }\n}\n\nexport default PhpFpmPanel;","import React from 'react';\n\nimport MonitorPanel from './MonitorPanel';\n\nclass PrometheusPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = this.state = {\n            xFieldName: \"x\",\n            yFieldName: \"y\",\n            seriesField: 'type',\n            \n            chartDataArray: [\n                {\n                    panelTitle: 'Cpu & Mem',\n                    // chartConfigs: [\n                    //     {\n                    //         queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                    //         pointsData: [],\n                    //         type: 'cpu',\n                    //         chartType: 'line',\n                    //         title: \"CPU 负载\",\n                    //         desc: \"按cpu分组的负载率\",\n                    //         yAxis: {\n                    //             visible: true,\n                    //             min: 0,\n                    //             max: 110,\n                    //             tickCount: 5,\n                    //         },\n                    //         loading: true,\n                    //     },                        \n                    // ],\n                },\n            ],\n        };\n    }\n\n\n\n    render() {\n        return (\n            <MonitorPanel {...this.state} >\n            </MonitorPanel>\n        );\n    }\n}\n\nexport default PrometheusPanel;","import React from 'react';\n\nimport MonitorPanel from './MonitorPanel';\n\nclass BackupsPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = this.state = {\n            xFieldName: \"x\",\n            yFieldName: \"y\",\n            seriesField: 'type',\n            \n            chartDataArray: [\n                {\n                    panelTitle: 'Backups',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'backup_mysql_size',\n                            chartType: 'column',\n                            title: \"MySQL备份大小\",\n                            desc: \"近七日备份，单位KB\",\n                            // yAxis: {\n                            //     visible: true,\n                            //     min: 0,\n                            //     max: 110,\n                            //     tickCount: 5,\n                            // },\n                            loading: true,\n                        }, \n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'backup_mysql_duration',\n                            chartType: 'column',\n                            title: \"MySQL备份时长\",\n                            desc: \"近七日备份耗时，单位毫秒\",\n                            // yAxis: {\n                            //     visible: true,\n                            //     min: 0,\n                            //     max: 110,\n                            //     tickCount: 5,\n                            // },\n                            loading: true,\n                        },              \n                    ],\n                },\n                {\n                    panelTitle: 'Backups',\n                    chartConfigs: [\n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'backup_wordpress_size',\n                            chartType: 'column',\n                            title: \"Wordpress备份大小\",\n                            desc: \"近七日备份，单位KB\",\n                            // yAxis: {\n                            //     visible: true,\n                            //     min: 0,\n                            //     max: 110,\n                            //     tickCount: 5,\n                            // },\n                            loading: true,\n                        },    \n                        {\n                            queryUrl: \"http://metric.lgxzj.wiki/api/v1/query\",\n                            pointsData: [],\n                            type: 'backup_wordpress_duration',\n                            chartType: 'column',\n                            title: \"Wordpress备份时长\",\n                            desc: \"近七日备份耗时，单位毫秒\",\n                            // yAxis: {\n                            //     visible: true,\n                            //     min: 0,\n                            //     max: 110,\n                            //     tickCount: 5,\n                            // },\n                            loading: true,\n                        },\n                    ],\n                },\n            ],\n        };\n    }\n\n\n\n    render() {\n        return (\n            <MonitorPanel {...this.state} >\n            </MonitorPanel>\n        );\n    }\n}\n\nexport default BackupsPanel;","import React from 'react';\n\nimport { Tabs } from 'antd';\n\nimport 'antd/dist/antd.css';\n\nimport MonitorPanel from './MonitorPanel';\nimport MysqlPanel from './MysqlPanel';\nimport NginxPanel from './NginxPanel';\nimport PhpFpmPanel from './PhpFpmPanel';\nimport PrometheusPanel from './PrometheusPanel';\nimport BackupsPanel from './BackupsPanel';\nimport WordpressPanel from './WordpressPanel';\n\nconst { TabPane } = Tabs;\n\nclass ServicePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dataConfigs: [\n                {\n                    tabTitle: 'MySQL'\n                },\n                {\n                    tabTitle: 'Nginx'\n                },\n                {\n                    tabTitle: 'PHP-FPM'\n                },\n                {\n                    tabTitle: 'Backups'\n                },\n            ]\n        }\n    }\n\n    onTabChange() {\n\n    }\n\n    title2Component(title) {\n        switch (title) {\n            case \"MySQL\":       return <MysqlPanel />;\n            case \"Nginx\":       return <NginxPanel />;\n            case \"PHP-FPM\":     return <PhpFpmPanel />;\n            case \"Prometheus\":  return <PrometheusPanel />;\n            case \"Backups\":     return <BackupsPanel />;\n\n            default:    throw \"unexpected title:\" + title;\n        }\n    }\n\n    tabPaneKey(idx) {\n        return \"key_\" + idx.toString();\n    }\n\n    render() {\n        var tabPanes = [];\n        this.state.dataConfigs.forEach((ele, idx) => {\n            tabPanes.push(\n                <TabPane tab={ele.tabTitle} key={this.tabPaneKey(idx)} >\n                    { this.title2Component(ele.tabTitle) }\n                </TabPane>\n            );\n        });\n\n        return (\n            <Tabs defaultActiveKey={this.tabPaneKey(0)} onChange={this.onTabChange} type={\"card\"} centered={true}>\n                {tabPanes}\n            </Tabs>\n        )\n    }\n}\n\n\nexport default ServicePage;","import React from 'react';\n\nimport MonitorPanel from './MonitorPanel';\n\nclass WordpressPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = this.state = {\n            xFieldName: \"x\",\n            yFieldName: \"y\",\n            seriesField: 'type',\n            \n            chartDataArray: [\n                {\n                    panelTitle: 'Cpu & Mem',\n                    // chartConfigs: [\n                    //     {\n                    //         queryUrl: \"http://metric.lgxzj.wiki/api/v1/query_range\",\n                    //         pointsData: [],\n                    //         type: 'cpu',\n                    //         chartType: 'line',\n                    //         title: \"CPU 负载\",\n                    //         desc: \"按cpu分组的负载率\",\n                    //         yAxis: {\n                    //             visible: true,\n                    //             min: 0,\n                    //             max: 110,\n                    //             tickCount: 5,\n                    //         },\n                    //         loading: true,\n                    //     },                        \n                    // ],\n                },\n            ],\n        };\n    }\n\n\n\n    render() {\n        return (\n            <MonitorPanel {...this.state} >\n            </MonitorPanel>\n        );\n    }\n}\n\nexport default WordpressPanel;","import React from 'react';\nimport './App.css';\nimport MachinePage from './MachinePage';\nimport ServicePage from './ServicePage';\n\nfunction App() {\n  return (\n    // <MachinePage />\n    <ServicePage />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}